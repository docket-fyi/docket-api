# See https://docs.docker.com/compose/compose-file/

version: '2.4'
services:
  docket-vault:
    container_name: docket-vault
    build: ./docker/vault
    command: vault server -config=/vault/config/local.json
    ports:
      - 8200:8200
      - 8201:8201
    environment:
      VAULT_LOCAL_CONFIG: |
        {
          "backend": {
            "file": {
              "path": "/vault/file"
            }
          },
          "listener": {
            "tcp": {
              "address": "0.0.0.0:8200",
              "tls_disable": 1
            }
          },
          "default_lease_ttl": "168h",
          "max_lease_ttl": "720h",
          "ui": true
        }
      VAULT_API_ADDR: 'http://127.0.0.1:8200'
    cap_add:
      - IPC_LOCK
  docket-swagger-ui:
    container_name: docket-swagger-ui
    image: swaggerapi/swagger-ui
    ports:
      - 3200:8080
  docket-redis:
    container_name: docket-redis
    build: ./docker/redis
    ports:
      - 6379:6379
  docket-postgres:
    container_name: docket-postgres
    build: ./docker/postgres
    command: postgres -c logging_collector=on -c log_directory=/var/log/postgresql -c log_statement=all
    ports:
      - 5432:5432
    # environment:
    #   POSTGRES_USER: 'user'
    #   POSTGRES_PASSWORD: 'user'
    # links:
    #   - docket-elasticsearch
    #   - docket-kibana
  docket-elasticsearch:
    container_name: docket-elasticsearch
    # image: elasticsearch:7.2.0
    build: ./docker/elasticsearch
    ports:
      - 9200:9200
      - 9300:9300
    # networks:
    #   - docket
    environment:
      # - cluster.initial_master_nodes=master-a
      - discovery.type=single-node
      # - index.number_of_replicas=0
      # - index.number_of_shards=0
    # healthcheck:
    #   test: docker-healthcheck-elasticsearch
    #   interval: 60s
    #   timeout: 10s
    #   retries: 3
  docket-kibana:
    container_name: docket-kibana
    image: kibana:7.5.2
    ports:
      - 5601:5601
    environment:
      ELASTICSEARCH_HOSTS: 'http://docket-elasticsearch:9200'
    depends_on:
      docket-elasticsearch:
        condition: service_healthy
    links:
      - docket-elasticsearch
    # networks:
    #   - docket
  # docket-mongo:
  #   container_name: docket-mongo
  #   image: mongo:4.0.3
  #   ports:
  #     - '27017:27017'
  #   # volumes:
  #   #   - ./data/db:/data/db
  #   # environment:
  #   #   MONGO_INITDB_ROOT_USERNAME: ''
  #   #   MONGO_INITDB_ROOT_PASSWORD: 'root'
  docket-api:
    entrypoint: ["./docker-entrypoint.sh"]
    container_name: docket-api
    build: .
    environment:
      - NODE_ENV
      - VAULT_APPROLE_ROLE_ID
      - VAULT_WRAP_TOKEN
      - VAULT_PROTOCOL
      - VAULT_HOST
      - VAULT_PORT
      - VAULT_TOKEN
    # command: npm run start
    # working_dir: /docket/docket-api
    # volumes:
    #   - .:/docket/docket-api
    ports:
      - 3001:3001
      # - 9222:9222
      # - 9229:9229
      - 9299:9299
    depends_on:
      docket-postgres:
        condition: service_healthy
      docket-redis:
        condition: service_healthy
      docket-elasticsearch:
        condition: service_healthy
      # docket-vault:
      #   condition: service_healthy
    links:
      - docket-postgres
      - docket-redis
      - docket-elasticsearch
      - docket-vault
  docket-worker:
    # entrypoint: ["./docker-entrypoint.sh"]
    container_name: docket-worker
    build: .
    # command: node --inspect=0.0.0.0 ./index.js
    # command: npm run start:worker
    # working_dir: /docket/docket-worker
    # volumes:
    #   - .:/docket/docket-worker
    # ports:
      # - '3000:3000'
      # - '9222:9222'
      # - '9229:9229'
      # - '9299:9299'
    depends_on:
      # - docket-postgres
      docket-redis:
        condition: service_healthy
      docket-elasticsearch:
        condition: service_healthy
      # docket-vault:
      #   condition: service_healthy
      # docket-api:
      #   condition: service_healthy
      # docket-postgres:
      #   condition: service_healthy
    links:
      # - docket-postgres
      - docket-redis
      - docket-elasticsearch
      - docket-vault
