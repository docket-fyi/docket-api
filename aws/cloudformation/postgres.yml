AWSTemplateFormatVersion: '2010-09-09'
Mappings:
  StackMap:
    Stack:
      Stage: docket-staging-ecs
      Production: docket-production-ecs
  DatabaseNameMap:
    Name:
      Stage: docket-staging
      Production: docket-production
Parameters:
  DatabaseName:
    Type: String
    Default: 'docket_staging'
    AllowedValues: [docket_staging, docket_production]
  Environment:
    Type: String
    Default: 'Staging'
    AllowedValues: [Staging, Production]
  DatabaseUser:
    NoEcho: 'true'
    Description: The database admin account username
    Type: String
    MinLength: '1'
    MaxLength: '16'
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
    ConstraintDescription: Must begin with a letter and contain only alphanumeric
                           characters.
  DatabasePassword:
    NoEcho: 'true'
    Description: The database admin account password
    Type: String
    MinLength: '1'
    MaxLength: '41'
    AllowedPattern: '[a-zA-Z0-9]+'
    ConstraintDescription: Must contain only alphanumeric characters.
  DatabaseAllocatedStorage:
    Default: '5'
    Description: The size of the database (Gb)
    Type: Number
    MinValue: '5'
    MaxValue: '1024'
    ConstraintDescription: Must be between 5 and 1024Gb.
  DatabaseInstanceClass:
    Description: The database instance type
    Type: String
    Default: db.t2.small
    AllowedValues: [db.t1.micro, db.m1.small, db.m1.medium, db.m1.large, db.m1.xlarge,
      db.m2.xlarge, db.m2.2xlarge, db.m2.4xlarge, db.m3.medium, db.m3.large, db.m3.xlarge,
      db.m3.2xlarge, db.m4.large, db.m4.xlarge, db.m4.2xlarge, db.m4.4xlarge, db.m4.10xlarge,
      db.r3.large, db.r3.xlarge, db.r3.2xlarge, db.r3.4xlarge, db.r3.8xlarge, db.m2.xlarge,
      db.m2.2xlarge, db.m2.4xlarge, db.cr1.8xlarge, db.t2.micro, db.t2.small, db.t2.medium,
      db.t2.large]
    ConstraintDescription: Must select a valid database instance type.
  MultiAvailabilityZone:
    Description: Multi-AZ master database
    Type: String
    Default: 'false'
    AllowedValues: ['true', 'false']
    ConstraintDescription: Must be true or false.
Resources:
  DBEC2SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      Tags:
        -
          Key: Product
          Value: !FindInMap [StackMap, Stack, !Ref Environment]
      GroupDescription: Open database for access
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: '3306'
        ToPort: '3306'
        SourceSecurityGroupId:
            Fn::ImportValue: !Join [':', [!FindInMap [StackMap, Stack, !Ref Environment], 'EcsHostSecurityGroup']]
  DBSecurityGroup:
    Type: AWS::RDS::DBSecurityGroup
    Properties:
      Tags:
        -
          Key: Product
          Value: !FindInMap [StackMap, Stack, !Ref Environment]
      DBSecurityGroupIngress:
        EC2SecurityGroupId:
            Fn::ImportValue: !Join [':', [!FindInMap [StackMap, Stack, !Ref Environment], 'EcsHostSecurityGroup']]
      GroupDescription: database access
  MasterDB:
    Type: AWS::RDS::DBInstance
    Properties:
      DBInstanceIdentifier: !FindInMap [DatabaseNameMap, Name, !Ref Environment]
      DBName: !Ref DatabaseName
      AllocatedStorage: !Ref DatabaseAllocatedStorage
      DBInstanceClass: !Ref DatabaseInstanceClass
      Engine: Postgres
      MasterUsername: !Ref DatabaseUser
      MasterUserPassword: !Ref DatabasePassword
      MultiAZ: !Ref MultiAvailabilityZone
      Tags:
        -
          Key: Product
          Value: !FindInMap [StackMap, Stack, !Ref Environment]
        -
          Key: Name
          Value: !Join ['-', [ !FindInMap [DatabaseNameMap, Name, !Ref Environment], Master ]]
      VPCSecurityGroups: [!GetAtt [DBEC2SecurityGroup, GroupId]]
      DBSecurityGroups: [!Ref DBSecurityGroup]
    DeletionPolicy: Snapshot
Outputs:
  MasterJDBCConnectionString:
    Description: JDBC connection string for the master database
    Value: !GetAtt [MasterDB, Endpoint.Address]
