version: 2.1
orbs:
  # See https://circleci.com/orbs/registry/orb/circleci/aws-cli
  # aws-cli: circleci/aws-cli@0.1.19
  # See https://circleci.com/orbs/registry/orb/circleci/aws-ecr
  aws-ecr: circleci/aws-ecr@6.7.0
  # See https://circleci.com/orbs/registry/orb/circleci/aws-ecs
  aws-ecs: circleci/aws-ecs@1.0.4
jobs:
  lint:
    working_directory: ~/docket/docket-api
    docker:
      - image: circleci/node:12.10.0
    steps:
      - checkout
      - run:
          name: Update NPM
          command: sudo npm i -g npm@latest
      - restore_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
      - run:
          name: Install NPM packages
          command: npm ci
      - save_cache:
          paths:
            - ./node_modules
          key: dependency-cache-{{ checksum "package-lock.json" }}
      - run:
          name: Lint
          command: npm run lint
  test:
    working_directory: ~/docket/docket-api
    docker:
      - image: circleci/node:12.10.0
    steps:
      - checkout
      - run:
          name: Update NPM
          command: sudo npm i -g npm@latest
      - restore_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
      - run:
          name: Install NPM packages
          command: npm ci
      - save_cache:
          paths:
            - ./node_modules
          key: dependency-cache-{{ checksum "package-lock.json" }}
      - run:
          name: Run unit tests
          command: npm run test:unit
      - run:
          name: Upload test results to Coveralls
          command: cat ./coverage/lcov.info | $(npm bin)/coveralls # Configured using environment variables in CircleCI
      - store_artifacts:
          path: test-results
      - store_artifacts:
          path: coverage
      - store_test_results:
          path: test-results
  update_cloudformation:
    working_directory: ~/docket/docket-api
    docker:
      - image: alpine:latest
    steps:
      - checkout
      - run:
          name: Update CloudFormation
          command: |
            aws cloudformation deploy \
              --stack-name $AWS_CLOUDFORMATION_STACK_NAME \
              --template-file ./aws/cloudformation/stack.yml \
              --no-fail-on-empty-changeset
workflows:
  version: 2
  lint_and_test:
    jobs:
      - lint
      - test
  build_push_and_deploy_image:
    jobs:
      # See https://circleci.com/orbs/registry/orb/circleci/aws-ecr#commands-build-and-push-image
      - aws-ecr/build-and-push-image:
          repo: "${AWS_ECR_REPOSITORY_NAME}"
          tag: "${CIRCLE_SHA1}"
      # See https://circleci.com/orbs/registry/orb/circleci/aws-ecs#jobs-update-task-definition
      - aws-ecs/update-task-definition:
          requires:
            - aws-ecr/build-and-push-image
          family: "${AWS_ECS_FAMILY}"
          container-image-name-updates: "container=${AWS_ECS_CONTAINER},tag=${CIRCLE_SHA1}"
  update_cloudformation:
    jobs:
      - aws-cli/setup
      - update_cloudformation
